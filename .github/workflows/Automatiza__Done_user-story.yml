name: Auto-complete parent issues

on:
  issues:
    types: [edited, closed]  # dispara quando sub-issue é editada ou fechada

jobs:
  check_sub_issues:
    runs-on: ubuntu-latest
    steps:
      - name: Check parent issues
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PROJECT_TOKEN }}
          script: |
            // Defina a coluna/Status "Done" e o campo Status do Project
            const STATUS_FIELD_ID = "PVTSSF_lAHOCkTTTs4BCts3zg02C_4"
            const Done = "Done"

            // Lista todos os issues no repositório
            const issues = await github.paginate(github.rest.issues.listForRepo, {
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: "open"
            })

            for (const issue of issues) {
              // Verifica se é um issue pai (tem checklist ou linked issues)
              const bodyText = issue.body || "";
              const bodyTasks = (bodyText.match(/- \[ \]/g) || []).length;

              // Verifica sub-issues vinculados via timeline events
              const timeline = await github.rest.issues.listEventsForTimeline({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number
              })

              let linkedOpenIssues = timeline.data.filter(event =>
                event.event === "connected" &&
                event.source && event.source.type === "Issue" &&
                event.source.issue.state === "open"
              ).length

              const remainingSubIssues = bodyTasks + linkedOpenIssues

              console.log(`Issue #${issue.number} → Sub-issues restantes: ${remainingSubIssues}`)

              if (remainingSubIssues === 0) {
                // Atualiza o status do issue no Project V2
                // Pega o item do Project associado a este issue
                const projectItem = await github.rest.projects.listProjectItems({
                  project_id: 1
                })

                const parentItem = projectItem.data.find(item => item.content_url && item.content_url.endsWith(`/issues/${issue.number}`))

                if (parentItem) {
                  await github.rest.projects.updateProjectV2ItemFieldValue({
                    project_v2_item_id: parentItem.id,
                    field_id: STATUS_FIELD_ID,
                    value: { name: Done }
                  })
                  console.log(`Issue #${issue.number} movido para Done!`)
                }
              }
            }
