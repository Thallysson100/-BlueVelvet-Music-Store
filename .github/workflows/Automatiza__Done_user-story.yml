name: Auto-complete parent issues (checklists)

on:
  issues:
    types: [edited, closed] # dispara quando sub-issue é editado ou fechado

jobs:
  complete_checklists:
    runs-on: ubuntu-latest
    steps:
      - name: Move parent to Done if checklist is complete
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PROJECT_TOKEN }}
          script: |
            const PROJECT_ID = "PVT_kwHOCkTTTs4BCts3"         // ID do Project V2
            const STATUS_FIELD_ID = "PVTSSF_lAHOCkTTTs4BCts3zg02C_4" // ID do campo "Status"
            const DONE_OPTION_ID = "98236657"  // ID da opção "Done"

            // Busca os itens do Project e os issues vinculados
            const query = `
              query($project: ID!) {
                node(id: $project) {
                  ... on ProjectV2 {
                    items(first: 50) {
                      nodes {
                        id
                        content {
                          ... on Issue {
                            number
                            body
                          }
                        }
                      }
                    }
                  }
                }
              }
            `
            const result = await github.graphql(query, { project: PROJECT_ID })
            const items = result.node.items.nodes

            for (const item of items) {
              if (!item.content) continue
              const issue = item.content

              // garante que body não seja nulo
              const bodyText = issue.body || ""
              const bodyTasks = (bodyText.match(/- \[ \]/g) || []).length

              if (bodyTasks === 0) {
                console.log(`✅ Issue #${issue.number} completa, movendo para Done`)

                // mutation para atualizar o Status do item
                const mutation = `
                  mutation($project: ID!, $item: ID!, $field: ID!, $option: String!) {
                    updateProjectV2ItemFieldValue(
                      input: {
                        projectId: $project
                        itemId: $item
                        fieldId: $field
                        value: { singleSelectOptionId: $option }
                      }
                    ) {
                      projectV2Item { id }
                    }
                  }
                `
                await github.graphql(mutation, {
                  project: PROJECT_ID,
                  item: item.id,
                  field: STATUS_FIELD_ID,
                  option: DONE_OPTION_ID
                })
              } else {
                console.log(`⏳ Issue #${issue.number} ainda tem ${bodyTasks} pendências.`)
              }
            }
